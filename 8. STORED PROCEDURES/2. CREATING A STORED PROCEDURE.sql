-- CREATING A STORED PROCEDURE

DELIMITER $$
CREATE PROCEDURE get_clients()
BEGIN
	SELECT *
	FROM clients;
END$$
 DELIMITER ;                   

-- BEGIN AND END ARE CALLED THE BODY OF THE
-- NOW FOR DEMONSTRATION WE HAVE SINGLE STATEMENTS, BUT IN REAL LIFE SCENARIOS THERE CAN HAVE MULTIPLE STATEMENTS
-- WE HAVE TO END EVERY STATEMENT WITH ;( THIS IS MYSQL REQUIREMENT, YOU DONT HAVE TO WORRY ABOUT OTHER SQLS)


-- WE GONNA GIVE ALL THE STATEMENT TO MYSQL AS A SINGLE UNIT RATHER THAN DIFFERENT UNITS
-- HOW DO WE DO IT??
-- WE WILL HAVE TO CHANGE DEFAULT DELIMITER (;) TO SOMETHING ELSE
-- JUST BEFORE CREATING OUR PROCEDURES WE CHANGE THE DELIMITER 
-- BY CONVENTION LOTS OF DEVVELOPERS USE $$ BUT WE CAN USE ANYTHING
-- AND AFTER WE HAVE TO CHANGE THE DELIMITER BACK TO (;)
-- IN OTHER SQL DATABASE SERVERS LIKE SQL SERVER YOU DONT HAVE TO CHANGE THE DELIMITER

-- WE CAN CALL THE STORED PROCEDURE USING FOLLOWING QUERRY BESIDE MANNUAL CALLING

CALL get_clients(); -- and it will give the results
-- calling the stored procedure we do most of the time while writing application in languages like java, c#, python, etc


-- exercise: CREATE A STORED PROCEDURE CALLED
	-- get_invoices_with_balance
    -- to return all the invoices having bal>0
    
    
DELIMITER $$
CREATE PROCEDURE get_invoices_with_balance()
BEGIN
	SELECT *FROM
	invoices
	WHERE invoice_total - payment_total > 0;
END$$
DELIMITER ;


-- HERE WE CAN USE VIEWS 

DELIMITER $$
CREATE PROCEDURE get_invoices_with_balance()
BEGIN
	SELECT *FROM
	invoices_with_balance
    WHERE balance > 0;
END$$
DELIMITER ;


